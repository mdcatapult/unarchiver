akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "ERROR"
  stdout-loglevel = "ERROR"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

op-rabbit {
  topic-exchange-name = ${?RABBITMQ_EXCHANGE}
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 4
    }
    throughput = 1
  }
  connection {
    virtual-host = "doclib"
    virtual-host = ${?RABBITMQ_VHOST}
    hosts = [${?RABBITMQ_HOST}]
    username = ${?RABBITMQ_USERNAME}
    password = ${?RABBITMQ_PASSWORD}
    port = 5672
    port = ${?RABBITMQ_PORT}
    ssl = false
    connection-timeout = 3s
  }
}

mongo {
  database = ${?MONGO_DATABASE}
  collection = ${?MONGO_COLLECTION}
  read-collection = ${?mongo.collection}
  read-collection = ${?MONGO_COLLECTION_READ}
  write-collection = ${?mongo.collection}
  write-collection = ${?MONGO_COLLECTION_WRITE}
  connection {
    hosts = [${?MONGO_HOST}]
    username = ${?MONGO_USERNAME}
    password = ${?MONGO_PASSWORD}
    port = 27017
    port = ${?MONGO_PORT}
    database = "admin"
    database = ${?MONGO_AUTH_DB}
  }
}

upstream {
  concurrent: 1
  concurrent: ${?UPSTREAM_CONCURRENT}
  queue: "unarchive"
  queue: ${?UPSTREAM_QUEUE}
}

downstream {
  queue: "prefetch"
  queue: ${?DOWNSTREAM_QUEUE}
}

doclib {
  flags: "doclib"
  flags: ${?DOCLIB_FLAGS}
  flag: "unarchived"
  flag: ${?DOCLIB_FLAG}
  root: "/doclib"
  root: ${?DOCLIB_ROOT}
  supervisor {
    queue: "supervisor"
    queue: ${?DOCLIB_SUPERVISOR_QUEUE}
  }
  archive {
    queue: "archive"
    queue: ${?DOCLIB_ARCHIVE_QUEUE}
  }
  errors {
    queue: "errors"
    queue: ${?DOCLIB_ARCHIVE_QUEUE}
  }
  local {
    target-dir: "local"
    target-dir: ${?DOCLIB_LOCAL_TARGET}
    temp-dir: "ingress"
    temp-dir: ${?DOCLIB_LOCAL_TEMP}
  }
  archive {
    target-dir: "archive"
    target-dir: ${?DOCLIB_ARCHIVE_TARGET}
  }
  remote {
    target-dir: "remote"
    target-dir: ${?DOCLIB_REMOTE_TARGET}
    temp-dir: "remote-ingress"
    temp-dir: ${?DOCLIB_REMOTE_TEMP}
  }
}

unarchive {
  to: {
    path: "derivatives"
    path: ${?UNARCHIVE_TO_PATH}
  }
}